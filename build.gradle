plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.6'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

allure {
    version = '2.17.0'
}

task cleanReportsDir {
    delete project.property('reportsDir')
    delete 'build/allure-results'
}

def cucumberVersion = "7.2.2"
def restAssuredVersion = "5.0.1"
def awaitilityVersion = "4.2.0"
def gsonVersion = "2.9.0"
def allureVersion = "2.17.0"

dependencies {
    testImplementation "io.cucumber:cucumber-java:$cucumberVersion"
    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
    testImplementation "io.cucumber:cucumber-junit:$cucumberVersion"
    testImplementation "io.rest-assured:rest-assured:$restAssuredVersion"
    testImplementation "com.google.code.gson:gson:$gsonVersion"
    testImplementation "io.qameta.allure:allure-cucumber7-jvm:$allureVersion"
    testImplementation "io.qameta.allure:allure-rest-assured:$allureVersion"
    testImplementation "org.slf4j:slf4j-nop:1.7.13"
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses, cleanReportsDir
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            if (System.getProperty("cucumber.filter.tags")) {
                systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
            }
            systemProperty("allure.results.directory", "build/allure-results")
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
                     '--threads', System.getProperty("cucumber.feature") ? 1 : 9,
                    '--glue', 'hooks', 'src/test/resources']
        }
    }
    cucumber.finalizedBy 'allureReport'
}
